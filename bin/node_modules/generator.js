var fs = require("fs");
var mkdirp = require("mkdirp");
var dirname = require("path").dirname;
function generateCode(config, dsp, fn){
  var code = require(config.type).init(config, dsp);
	copyFormated(code);
}

function copyFormated(json){
	json.files.forEach(function(file){
		var srcFile = json.srcDir + file;
		var destFile = json.destDir + file;
		if(!fs.existsSync(srcFile)){
			console.err("Source file not exists: " + srcFile);
			process.exit(1);
		}
		mkdirp.sync(dirname(destFile));
		fs.writeFile(destFile + '/' + file, tmpl(srcFile + '/' + file, json.env));
	});
}
var cache = {};
function tmpl(str, data){
	// Simple JavaScript Templating
	// John Resig - http://ejohn.org/ - MIT Licensed
  var fn = fs.existsSync(str) ?
				cache[str] = cache[str] ||
        tmpl(fs.readFileSync(str).toString()) :
				
				// Generate a reusable function that will serve as a template
				// generator (and which will be cached).
				new Function(
					"obj", 
					"var p=[],print=function(){p.push.apply(p,arguments);};" +						
						// Introduce the data as local variables using with(){}
						"with(obj){p.push('" +
						
						// Convert the template into pure JavaScript
						str
						.replace(/[\r\t\n]/g, " ")
						.split("<\|").join("\t")
						.replace(/((^|\|>)[^\t]*)'/g, "$1\r")
						.replace(/\t=(.*?)\|>/g, "',$1,'")
						.split("\t").join("');")
						.split("\|>").join(";p.push('")
						.split("\r").join("\\'")
						+ "');}return p.join('');");
  
  // Provide some basic currying to the user
  return data ? fn( data ) : fn;
};
module.exports.generateCode = generateCode;
